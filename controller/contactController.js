const crypto = require("crypto");
const nodemailer = require("nodemailer");
const contactController = async (req, res) => {
   
    try {
        const fromData = req.body;
        const { firstName, lastName, jobTitle, companyName, email, message } = fromData;
        console.log(fromData);
        const requestId = crypto.randomBytes(4).toString("hex");

        const transporter = nodemailer.createTransport({
            host: process.env.MAIL_HOST,
            auth:{
                user:process.env.MAIL_USER,
                pass: process.env.MAIL_PASS,
            },
        });
        const orgMailOptions = {
      from: `"BrandScaler Contact" <${process.env.MAIL_USER}>`,
      to: process.env.ORG_EMAIL, // e.g. info@brandscaler.com
      subject: `New Contact Form Submission from ${firstName} ${lastName}`,
       html: `
    <div style="font-family: Arial, sans-serif; line-height: 1.6; color: #333; padding: 20px;">
      <h2 style="color: #1e40af;">📥 New Contact Submission Received</h2>

      <p><strong>Request ID:</strong> <span style="color: #2563eb;">${requestId}</span></p>

      <p>A new message was submitted through the BrandScaler contact form. Below are the details:</p>

      <h3 style="margin-top: 20px;">👤 Personal Details</h3>
      <ul>
        <li><strong>Full Name:</strong> ${firstName} ${lastName}</li>
        <li><strong>Email:</strong> ${email}</li>
        <li><strong>Job Title:</strong> ${jobTitle || 'N/A'}</li>
        <li><strong>Company Name:</strong> ${companyName || 'N/A'}</li>
      </ul>

      <h3 style="margin-top: 20px;">💬 Message</h3>
      <div style="background-color: #f3f4f6; padding: 12px 15px; border-left: 4px solid #3b82f6; border-radius: 4px;">
        ${message}
      </div>

      <h3 style="margin-top: 20px;">📅 Submission Info</h3>
      <ul>
        <li><strong>Submitted At:</strong> ${new Date().toLocaleString()}</li>
      </ul>

      <hr style="margin: 30px 0;">
      <p style="color: #6b7280;">This message was auto-generated by the BrandScaler contact form. Please follow up with the user if necessary.</p>
    </div>
  `
    };

    // Confirmation Email to User
    const userMailOptions = {
      from: `"BrandScaler Team" <${process.env.MAIL_USER}>`,
      to: email,
      subject: `We received your message at BrandScaler`,
      html: `
    <div style="font-family: Arial, sans-serif; line-height: 1.6; color: #333; padding: 20px;">
      <h2 style="color: #1e40af;">🤝 Thank You for Reaching Out!</h2>

      <p>Hi ${firstName},</p>

      <p>We’ve received your message and our team at <strong>BrandScaler</strong> will get back to you shortly.</p>

      <p><strong>📌 Your Request ID:</strong> <span style="color: #2563eb;">${requestId}</span></p>

      <h3 style="margin-top: 20px;">📄 Summary of Your Submission</h3>
      <ul>
        <li><strong>Full Name:</strong> ${firstName} ${lastName}</li>
        <li><strong>Email:</strong> ${email}</li>
        <li><strong>Job Title:</strong> ${jobTitle || 'N/A'}</li>
        <li><strong>Company Name:</strong> ${companyName || 'N/A'}</li>
      </ul>

      <h3 style="margin-top: 20px;">💬 Your Message</h3>
      <div style="background-color: #f3f4f6; padding: 12px 15px; border-left: 4px solid #3b82f6; border-radius: 4px;">
        ${message}
      </div>

      <p style="margin-top: 20px;">We appreciate you contacting us. If you need to follow up, please mention your <strong>Request ID</strong> for quicker assistance.</p>

      <p style="margin-top: 30px;">Warm regards,<br><strong>Team BrandScaler</strong></p>

      <hr style="margin: 30px 0;">
      <p style="color: #6b7280; font-size: 12px;">This is an automated message confirming we received your submission.</p>
    </div>
  `
    };

    // Send emails
    await transporter.sendMail(orgMailOptions);
    await transporter.sendMail(userMailOptions);

    res.status(200).json({ success: true, requestId });
        

    } catch(err){
        res.json({
            message : err.message || err,
            error : true,
            success : false
        })
    }
}

module.exports = contactController;

